---
## firewalld ##
host_firewalld_zone: dmz

## is_alive ##
host_is_alive_echo_request_target: iwakura.emanon.moe

## zfs ##
host_zfs_primary_pools:
  - pool: tank
    path: "/tank"

########## Podman ##########
host_podman_volumes_path: "{{ host_zfs_primary_pools[0].path }}/containers"
host_podman_media_path: "{{ host_zfs_primary_pools[0].path }}/media"
host_podman_media_2_path: "{{ host_zfs_primary_pools[0].path }}/emanon/media"
host_podman_files_path: "{{ host_zfs_primary_pools[0].path }}/emanon/files"
host_podman_misc_path: "{{ host_zfs_primary_pools[0].path }}/misc"
host_podman_minecraft_path: "{{ host_zfs_primary_pools[0].path }}/minecraft"
########## Podman ##########


## podman_transmission ##
podman_use_firewalld: yes
host_transmission_use_rich_firewalld_rules: yes
host_transmission_firewalld_rich_rules:
  - { family: ipv4, source: "{{ grp_device.arch.ipv4_addr }}", port: "{{ http_services | selectattr('service', 'equalto', 'transmission') | map(attribute='backends') | first | map(attribute='port') | first }}", proto: tcp }
  - { family: ipv6, source: "{{ grp_device.arch.ipv6_addr_global }}", port: "{{ http_services | selectattr('service', 'equalto', 'transmission') | map(attribute='backends') | first | map(attribute='port') | first }}", proto: tcp }
  - { family: ipv4, source: "{{ grp_device.one.ipv4_addr }}", port: "{{ http_services | selectattr('service', 'equalto', 'transmission') | map(attribute='backends') | first | map(attribute='port') | first }}", proto: tcp }

host_transmission_volumes:
  - "{{ host_podman_volumes_path }}/transmission/:/transmission"
  - "{{ host_podman_media_path }}:/media"
  - "{{ host_podman_misc_path }}:/misc"
  - "{{ host_podman_files_path }}:/files"
host_transmission_env_download_path: "/misc"


## podman_jellyfin ##
host_jellyfin_use_rich_firewalld_rules: no
host_jellyfin_firewalld_rich_rules:
  - { family: ipv4, source: "{{ grp_device.arch.ipv4_addr }}", port: "{{ http_services | selectattr('service', 'equalto', 'jellyfin') | map(attribute='backends') | first | map(attribute='port') | first }}", proto: tcp }
  - { family: ipv6, source: "{{ grp_device.arch.ipv6_addr_global }}", port: "{{ http_services | selectattr('service', 'equalto', 'jellyfin') | map(attribute='backends') | first | map(attribute='port') | first }}", proto: tcp }
  - { family: ipv4, source: "{{ grp_device.one.ipv4_addr }}", port: "{{ http_services | selectattr('service', 'equalto', 'jellyfin') | map(attribute='backends') | first | map(attribute='port') | first }}", proto: tcp }

host_jellyfin_volumes:
  - "{{ host_podman_volumes_path }}/jellyfin/cache:/cache"
  - "{{ host_podman_volumes_path }}/jellyfin/config:/config"
  - "{{ host_podman_media_path }}:/media"
  - "{{ host_podman_media_2_path }}:/media_2"
  - "{{ host_podman_misc_path }}:/misc"


## podman_filebrowser ##
host_filebrowser_use_rich_firewalld_rules: no
host_filebrowser_firewalld_rich_rules:
  - { family: ipv4, source: "{{ grp_device.arch.ipv4_addr }}", port: "{{ http_services | selectattr('service', 'equalto', 'filebrowser') | map(attribute='backends') | first | map(attribute='port') | first }}", proto: tcp }
  - { family: ipv6, source: "{{ grp_device.arch.ipv6_addr_global }}", port: "{{ http_services | selectattr('service', 'equalto', 'filebrowser') | map(attribute='backends') | first | map(attribute='port') | first }}", proto: tcp }
  - { family: ipv4, source: "{{ grp_device.one.ipv4_addr }}", port: "{{ http_services | selectattr('service', 'equalto', 'filebrowser') | map(attribute='backends') | first | map(attribute='port') | first }}", proto: tcp }

host_filebrowser_volumes:
  - "{{ host_podman_volumes_path }}/filebrowser/config/settings.json:/config/settings.json"
  - "{{ host_podman_volumes_path }}/filebrowser/database/database.db:/database/database.db"
  - "{{ host_podman_files_path }}:/srv"


## podman_syncthing ##
host_syncthing_use_rich_firewalld_rules: yes
host_syncthing_firewalld_rich_rules:
  - { family: ipv4, source: "{{ grp_device.arch.ipv4_addr }}", port: "{{ http_services | selectattr('service', 'equalto', 'syncthing') | map(attribute='backends') | first | map(attribute='port') | first }}", proto: tcp }
  - { family: ipv6, source: "{{ grp_device.arch.ipv6_addr_global }}", port: "{{ http_services | selectattr('service', 'equalto', 'syncthing') | map(attribute='backends') | first | map(attribute='port') | first }}", proto: tcp }
  - { family: ipv4, source: "{{ grp_device.one.ipv4_addr }}", port: "{{ http_services | selectattr('service', 'equalto', 'syncthing') | map(attribute='backends') | first | map(attribute='port') | first }}", proto: tcp }

## podman_minecraft ##
host_minecraft_use_rich_firewalld_rules: no
host_minecraft_volumes:
  - "{{ host_podman_minecraft_path }}:/data"