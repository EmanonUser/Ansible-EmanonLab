---
# Ansible-Emanonlab, variables conventions
# snake_case
# prefix define origin
  # host_
  # grp_
  # host_vault_
  # grp_vault_

# All variables must follow those path: 
##  host_vars/*/vault.yml --> host_vars/*/all.yml --> roles/*/default/main.yml  ##          Secret host variables
##  group_vars/*/vault.yml --> group_vars/*/all.yml --> roles/*/default/main.yml  ##        Secret group variables
##  host_vars/*/all.yml --> roles/*/default/main.yml  ##                                    Standards host variables
##  group_vars/*/all.yml --> roles/*/default/main.yml  ##                                   Standards group variables

# If a variables is used in multiples roles at the same time the prefix will be host_Origin-role_role_ and will be defined only on the origin role
# Variables that do not belong to a role will be placed in the Roleless section
# Add comment to external variables, variables that depend a third party apt gpg key etc
# Verbose is cool, use verbose names even when it become extra long

## Roleless ##
host_roleless_primary_user_username: "{{ host_vault_roleless_primary_user_username }}"
host_roleless_primary_user_password: "{{ host_vault_roleless_primary_user_password }}"
host_roleless_primary_user_password_salt: "{{ host_vault_roleless_primary_user_password_salt }}"
host_roleless_cpu_architecture: arm64 # amd64, arm64 etc ...
## Roleless ##

## device_init ##
host_device_init_roleless_primary_user_username: "{{ host_roleless_primary_user_username }}"
host_device_init_roleless_primary_user_password: "{{ host_roleless_primary_user_password }}"
host_device_init_roleless_primary_user_password_salt: "{{ host_roleless_primary_user_password_salt }}"
host_device_init_root_user_password: "{{ host_vault_device_init_root_user_password }}"
host_device_init_root_user_password_salt: "{{ host_vault_device_init_root_user_password_salt }}"
host_device_init_use_starship: yes
host_device_init_debian_stable_packages:
  - debian-keyring
  - debian-archive-keyring
  - ca-certificates
  - apt-transport-https
  - curl
  - gnupg2
  - lsb-release
  - dnsutils
  - ldnsutils
  - git
  - tmux
  - htop
  - tcpdump
  - mtr-tiny
  - zsh
  - unzip
  - neovim
  - acl
## device_init ##

## starship ##
host_starship_roleless_primary_user_username: "{{ host_roleless_primary_user_username }}"
host_starship_version: "1.1.1" # https://github.com/starship/starship/releases
## starship ##

## firewalld ##
host_firewalld_primary_interface: eth0
host_firewalld_zone: home
## firewalld ##

## prometheus_node_exporter ##
host_prometheus_node_exporter_roleless_cpu_architecture: "{{ host_roleless_cpu_architecture }}"
host_prometheus_node_exporter_version: "1.3.1" # https://github.com/prometheus/node_exporter/releases/
host_prometheus_node_exporter_firewalld_zone: "{{ host_firewalld_zone }}"
host_prometheus_node_exporter_interface_address: "{{ grp_device.pi.ipv4_addr }}"
host_prometheus_node_exporter_port: 9100
## prometheus_node_exporter ##

## promtail ##
host_promtail_cpu_architecture: "arm64"
host_promtail_version: "2.4.1" # https://github.com/grafana/loki/releases
host_promtail_path: "/opt/promtail"
host_promtail_loki_url: http://pi.local.emanon:4008
## promtail ##

## nfs_share ##
host_nfs_server_target: "192.168.10.25"
host_roleless_nfs_username: "{{ host_roleless_primary_user_username }}"
host_nfs_remote_share: /mnt/vault/emanon
host_nfs_mount_dir: /mnt/vault
host_nfs_unit_name: mnt-vault # Must match the mounted path ie: /mnt/vault == mnt-vault
## nfs_share ##

########## Podman ##########
host_podman_roleless_primary_user_username: "{{ host_roleless_primary_user_username }}"
host_podman_volumes_path: "/mnt/vault/data/homelab/podman"
########## Podman ##########

## podman_adguard ##
host_podman_adguard_roleless_primary_user_username: "{{ host_roleless_primary_user_username }}"
host_podman_adguard_image: docker.io/adguard/adguardhome
host_podman_adguard_image_version: "v0.107.0" # https://hub.docker.com/r/adguard/adguardhome/tags
host_podman_adguard_ports:
  - "{% if grp_podman_networking.adguard.lan_access %}[::]:{{ grp_podman_networking.adguard.webui_port }}{% else %}127.0.0.1:{{ grp_podman_networking.adguard.webui_port }}{% endif %}:3000/tcp"
  - "{% if grp_podman_networking.adguard.lan_access %}[::]:{{ grp_podman_networking.adguard.webui_port }}{% else %}[::1]:{{ grp_podman_networking.adguard.webui_port }}{% endif %}:3000/tcp"
  - "10053:53/udp"
  - "10053:53/tcp"
host_podman_adguard_firewalld_zone: "{{ host_firewalld_zone }}"
host_podman_adguard_firewalld_ports:
  webui: "{{ grp_podman_networking.adguard.webui_port }}/tcp"
  dns_udp: "10053/udp"
  dns_tcp: "10053/tcp"
host_podman_adguard_volumes_path: "{{ host_podman_volumes_path }}"
host_podman_adguard_directories:
  - "{{ host_podman_adguard_volumes_path }}/adguard/work"
  - "{{ host_podman_adguard_volumes_path }}/adguard/conf"
host_podman_adguard_volumes:
  - "{{ host_podman_adguard_directories[0] }}:/opt/adguardhome/work"
  - "{{ host_podman_adguard_directories[1] }}:/opt/adguardhome/conf"
## podman_adguard ##

## podman_transmission ##
host_podman_transmission_roleless_primary_user_username: "{{ host_roleless_primary_user_username }}"
host_podman_transmission_image: docker.io/haugene/transmission-openvpn
host_podman_transmission_image_version: "4.0" # https://hub.docker.com/r/haugene/transmission-openvpn/tags
host_podman_transmission_ports: 
  - "{% if grp_podman_networking.transmission.lan_access %}[::]:{{ grp_podman_networking.transmission.webui_port }}{% else %}127.0.0.1:{{ grp_podman_networking.transmission.webui_port }}{% endif %}:9091/tcp"
  - "{% if grp_podman_networking.transmission.lan_access %}[::]:{{ grp_podman_networking.transmission.webui_port }}{% else %}[::1]:{{ grp_podman_networking.transmission.webui_port }}{% endif %}:9091/tcp"
host_podman_transmission_firewalld_zone: "{{ host_firewalld_zone }}"
host_podman_transmission_firewalld_ports: "{{ grp_podman_networking.transmission.webui_port }}/tcp"
host_podman_transmission_volumes_path: "{{ host_podman_volumes_path }}"
host_podman_transmission_directories:
  - "{{ host_podman_transmission_volumes_path }}/transmission/home"
  - "{{ host_podman_transmission_volumes_path }}/transmission/completed"
  - "{{ host_podman_transmission_volumes_path }}/transmission/incompleted"
  - "{{ host_podman_transmission_volumes_path }}/transmission/watch"
host_podman_transmission_volumes:
   - "{{ host_podman_transmission_volumes_path }}/transmission:/transmission"
   - "/mnt/vault/media:/media"
host_podman_transmission_env_rpc_username: "{{ host_vault_podman_transmission_env_rpc_username }}"
host_podman_transmission_env_rpc_password: "{{ host_vault_podman_transmission_env_rpc_password }}"
host_podman_transmission_env_rpc_auth_required: true
host_podman_transmission_env_openvpn_provider: "{{ host_vault_podman_transmission_openvpn_provider }}"
host_podman_transmission_env_openvpn_config: "{{ host_vault_podman_transmission_openvpn_config }}"
host_podman_transmission_env_openvpn_username: "{{ host_vault_podman_transmission_openvpn_username }}"
host_podman_transmission_env_openvpn_password: "{{ host_vault_podman_transmission_openvpn_password }}"
host_podman_transmission_env_home_path: "/transmission/home"
host_podman_transmission_env_download_path: "/media"
host_podman_transmission_env_incomplete_path: "/transmission/incompleted"
host_podman_transmission_env_watch_path: "/transmission/watch"
host_podman_transmission_env_web_ui: "flood-for-transmission"
host_podman_transmission_env_local_network: "192.168.0.0/16"
## podman_transmission ##

## podman_prometheus ##
host_podman_prometheus_roleless_primary_user_username: "{{ host_roleless_primary_user_username }}"
host_podman_prometheus_image: docker.io/prom/prometheus
host_podman_prometheus_image_version: v2.32.1 # https://hub.docker.com/r/prom/prometheus/tags
host_podman_prometheus_ports: 
  - "{% if grp_podman_networking.prometheus.lan_access %}[::]:{{ grp_podman_networking.prometheus.webui_port }}{% else %}127.0.0.1:{{ grp_podman_networking.prometheus.webui_port }}{% endif %}:9090/tcp"
  - "{% if grp_podman_networking.prometheus.lan_access %}[::]:{{ grp_podman_networking.prometheus.webui_port }}{% else %}[::1]:{{ grp_podman_networking.prometheus.webui_port }}{% endif %}:9090/tcp"
host_podman_prometheus_firewalld_zone: "{{ host_firewalld_zone }}"
host_podman_prometheus_firewalld_ports: "{{ grp_podman_networking.prometheus.webui_port }}/tcp"
host_podman_prometheus_volumes_path: "{{ host_podman_volumes_path }}"
host_podman_prometheus_directories:
 - "{{ host_podman_prometheus_volumes_path }}/prometheus"
 - "{{ host_podman_prometheus_volumes_path }}/prometheus/data"
host_podman_prometheus_volumes: "{{ host_podman_prometheus_volumes_path }}/prometheus:/etc/prometheus"
host_podman_prometheus_config_path: "{{ host_podman_prometheus_volumes_path }}/prometheus/prometheus.yml"
## podman_prometheus ##

## podman_grafana ##
host_podman_grafana_roleless_primary_user_username: "{{ host_roleless_primary_user_username }}"
host_podman_grafana_image: docker.io/grafana/grafana
host_podman_grafana_image_version: "8.3.3-ubuntu" # https://hub.docker.com/r/grafana/grafana/tags
host_podman_grafana_ports: 
  - "{% if grp_podman_networking.grafana.lan_access %}[::]:{{ grp_podman_networking.grafana.webui_port }}{% else %}127.0.0.1:{{ grp_podman_networking.grafana.webui_port }}{% endif %}:3000/tcp"
  - "{% if grp_podman_networking.grafana.lan_access %}[::]:{{ grp_podman_networking.grafana.webui_port }}{% else %}[::1]:{{ grp_podman_networking.grafana.webui_port }}{% endif %}:3000/tcp"
host_podman_grafana_firewalld_zone: "{{ host_firewalld_zone }}"
host_podman_grafana_firewalld_ports: "{{ grp_podman_networking.grafana.webui_port }}/tcp"
host_podman_grafana_volumes_path: "{{ host_podman_volumes_path }}"
host_podman_grafana_volumes: "{{ host_podman_grafana_volumes_path }}/grafana/storage:/var/lib/grafana"
host_podman_grafana_dashboards: 
  - "home.json"
  - "kea_dhcp4.json"
  - "coredns.json"
  - "shp.json"
  - "tmp117.json"
host_podman_grafana_dashboards_path:
  general:
    - "{{ host_podman_grafana_volumes_path }}/grafana/dashboards/home.json"
  network:
    - "{{ host_podman_grafana_volumes_path }}/grafana/dashboards/kea_dhcp4.json"
    - "{{ host_podman_grafana_volumes_path }}/grafana/dashboards/coredns.json"
  env:
    - "{{ host_podman_grafana_volumes_path }}/grafana/dashboards/shp.json"
    - "{{ host_podman_grafana_volumes_path }}/grafana/dashboards/tmp117.json"
host_podman_grafana_url: "http://127.0.0.1:{{ grp_podman_networking.grafana.webui_port }}"
host_podman_grafana_admin_password: "{{ host_vault_grafana_admin_password }}"
## podman_grafana ##

## podman_homeassistant ##
host_podman_homeassistant_roleless_primary_user_username: "{{ host_roleless_primary_user_username }}"
host_podman_homeassistant_image: ghcr.io/home-assistant/home-assistant
host_podman_homeassistant_image_version: "2021.12.0" # https://github.com/home-assistant/core/pkgs/container/home-assistant/versions
host_podman_homeassistant_ports: 
  - "{% if grp_podman_networking.homeassistant.lan_access %}[::]:{{ grp_podman_networking.homeassistant.webui_port }}{% else %}127.0.0.1:{{ grp_podman_networking.homeassistant.webui_port }}{% endif %}:8123/tcp"
  - "{% if grp_podman_networking.homeassistant.lan_access %}[::]:{{ grp_podman_networking.homeassistant.webui_port }}{% else %}[::1]:{{ grp_podman_networking.homeassistant.webui_port }}{% endif %}:8123/tcp"
host_podman_homeassistant_firewalld_zone: "{{ host_firewalld_zone }}"
host_podman_homeassistant_firewalld_ports: "{{ grp_podman_networking.homeassistant.webui_port }}/tcp"
host_podman_homeassistant_volumes_path: "{{ host_podman_volumes_path }}"
host_podman_homeassistant_directories: "{{ host_podman_homeassistant_volumes_path }}/home_assistant"
host_podman_homeassistant_volumes: "{{ host_podman_homeassistant_volumes_path }}/home_assistant:/config"
host_podman_homeassistant_config_path: "{{ host_podman_homeassistant_volumes_path }}/home_assistant/configuration.yaml"
## podman_homeassistant ##

## podman_syncthing ##
host_podman_syncthing_roleless_primary_user_username: "{{ host_roleless_primary_user_username }}"
host_podman_syncthing_image: quay.io/linuxserver.io/syncthing
host_podman_syncthing_image_version: "1.18.5" # https://quay.io/repository/linuxserver.io/syncthing?tag=latest&tab=tags
host_podman_syncthing_ports: 
  - "{% if grp_podman_networking.syncthing.lan_access %}[::]:{{ grp_podman_networking.syncthing.webui_port }}{% else %}127.0.0.1:{{ grp_podman_networking.syncthing.webui_port }}{% endif %}:8384/tcp"
  - "{% if grp_podman_networking.syncthing.lan_access %}[::]:{{ grp_podman_networking.syncthing.webui_port }}{% else %}[::1]:{{ grp_podman_networking.syncthing.webui_port }}{% endif %}:8384/tcp"
  - "22000:22000/tcp"
  - "22000:22000/udp"
  - "21027:21027/udp"
host_podman_syncthing_firewalld_zone: "{{ host_firewalld_zone }}"
host_podman_syncthing_firewalld_ports:
  webui: "{{ grp_podman_networking.syncthing.webui_port }}/tcp"
  p2p_tcp: "22000/tcp"
  p2p_udp: "22000/udp"
  discovery: "21027/udp"
host_podman_syncthing_volumes_path: "{{ host_podman_volumes_path }}"
host_podman_syncthing_directories: 
  - "{{ host_podman_syncthing_volumes_path }}/syncthing"
  - "{{ host_podman_syncthing_volumes_path }}/syncthing/config"
host_podman_syncthing_volumes:
  - "{{ host_podman_syncthing_volumes_path }}/syncthing/config:/config"
  - "/mnt/vault/data/homelab/keepassxc:/data"
## podman_syncthing ##

## podman_flame ##
host_podman_flame_roleless_primary_user_username: "{{ host_roleless_primary_user_username }}"
host_podman_flame_image: docker.io/pawelmalak/flame
host_podman_flame_image_version: "multiarch2.2.0" # https://hub.docker.com/r/pawelmalak/flame/tags
host_podman_flame_ports:
  - "{% if grp_podman_networking.flame.lan_access %}[::]:{{ grp_podman_networking.flame.webui_port }}{% else %}127.0.0.1:{{ grp_podman_networking.flame.webui_port }}{% endif %}:5005/tcp"
  - "{% if grp_podman_networking.flame.lan_access %}[::]:{{ grp_podman_networking.flame.webui_port }}{% else %}[::1]:{{ grp_podman_networking.flame.webui_port }}{% endif %}:5005/tcp"
host_podman_flame_firewalld_zone: "{{ host_firewalld_zone }}"
host_podman_flame_firewalld_ports: "{{ grp_podman_networking.flame.webui_port }}/tcp"
host_podman_flame_volumes_path: "{{ host_podman_volumes_path }}"
host_podman_flame_directories: "{{ host_podman_flame_volumes_path }}/flame"
host_podman_flame_volumes: "{{ host_podman_flame_volumes_path }}/flame:/app/data"
host_podman_flame_password: "{{ host_vault_podman_flame_password }}"
## podman_flame ##

## podman_loki ##
host_podman_loki_roleless_primary_user_username: "{{ host_roleless_primary_user_username }}"
host_podman_loki_image: docker.io/grafana/loki
host_podman_loki_image_version: "2.4.1" # https://hub.docker.com/r/grafana/loki/tags
host_podman_loki_ports:
  - "{% if grp_podman_networking.loki.lan_access %}[::]:{{ grp_podman_networking.loki.webui_port }}{% else %}127.0.0.1:{{ grp_podman_networking.loki.webui_port }}{% endif %}:3100/tcp"
  - "{% if grp_podman_networking.loki.lan_access %}[::]:{{ grp_podman_networking.loki.webui_port }}{% else %}[::1]:{{ grp_podman_networking.loki.webui_port }}{% endif %}:3100/tcp"
host_podman_loki_firewalld_zone: "{{ host_firewalld_zone }}"
host_podman_loki_firewalld_ports: "{{ grp_podman_networking.loki.webui_port }}/tcp"
host_podman_loki_volumes_path: "{{ host_podman_volumes_path }}"
host_podman_loki_directories: 
  - "{{ host_podman_loki_volumes_path }}/loki"
  - "{{ host_podman_loki_volumes_path }}/loki/config"
  - "{{ host_podman_loki_volumes_path }}/loki/storage"
  - "{{ host_podman_loki_volumes_path }}/loki/rules"
host_podman_loki_volumes: 
  - "{{ host_podman_loki_volumes_path }}/loki/config:/mnt/config"
  - "{{ host_podman_loki_volumes_path }}/loki/storage:/mnt/storage"
  - "{{ host_podman_loki_volumes_path }}/loki/rules:/mnt/rules"
## podman_loki ##

## podman_pyload ##
host_podman_pyload_roleless_primary_user_username: "{{ host_roleless_primary_user_username }}"
host_podman_pyload_image: docker.io/linuxserver/pyload
host_podman_pyload_image_version: version-36437bcc
host_podman_pyload_ports:
  - "{% if grp_podman_networking.pyload.lan_access %}[::]:{{ grp_podman_networking.pyload.webui_port }}{% else %}127.0.0.1:{{ grp_podman_networking.pyload.webui_port }}{% endif %}:8000/tcp"
  - "{% if grp_podman_networking.pyload.lan_access %}[::]:{{ grp_podman_networking.pyload.webui_port }}{% else %}[::1]:{{ grp_podman_networking.pyload.webui_port }}{% endif %}:8000/tcp"
host_podman_pyload_firewalld_zone: "{{ host_firewalld_zone }}"
host_podman_pyload_firewalld_ports: "{{ grp_podman_networking.pyload.webui_port }}/tcp"
host_podman_pyload_directories:
  - "{{ host_podman_volumes_path }}/pyload"
  - "{{ host_podman_volumes_path }}/pyload/config"
  - "{{ host_podman_volumes_path }}/pyload/downloads"
host_podman_pyload_volumes:
  - "{{ host_podman_volumes_path }}/pyload/config:/config"
  - "{{ host_podman_volumes_path }}/pyload/downloads:/downloads"
## podman_pyload ##

## haproxy ##
host_haproxy_firewalld_zone: "{{ host_firewalld_zone }}"
host_haproxy_firewalld_services: ["http", "https"]
host_haproxy_stats: no
## haproxy ##