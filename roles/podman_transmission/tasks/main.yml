---
- name: Create transmission volumes dir
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: emanon
    group: emanon
    mode: u=rwx,g=,o=
  loop: "{{ podman_transmission_directories }}"

- name: Run transmission podman container
  containers.podman.podman_container:
    name: transmission_ansible
    image: "{{ podman_transmission_image }}:{{ podman_transmission_image_version }}"
    publish: "{{ podman_transmission_ports }}"
    volumes: "{{ podman_transmission_volumes }}"
    log_driver: k8s-file
    log_options: max_size=10m
    restart_policy: unless-stopped
    state: started
    privileged: yes
    env:
      OPENVPN_PROVIDER: "{{ podman_transmission_openvpn_provider }}"
      OPENVPN_CONFIG: "{{ podman_transmission_openvpn_config }}"
      OPENVPN_USERNAME: "{{ podman_transmission_openvpn_username }}"
      OPENVPN_PASSWORD: "{{ podman_transmission_openvpn_password }}"
      LOCAL_NETWORK: "192.168.0.0/16"
      TRANSMISSION_HOME: "/transmission/home"
      TRANSMISSION_DOWNLOAD_DIR: "/media"
      #TRANSMISSION_INCOMPLETE_DIR: "/transmission/incompleted"
      TRANSMISSION_WATCH_DIR: "/transmission/watch"
      TRANSMISSION_WEB_UI: "flood-for-transmission"
  become_user: "{{ primary_user_username }}"

- name: Open transmission firewalld ports to admin devices
  ansible.posix.firewalld:
    zone: "{{ podman_firewalld_zone }}"
    rich_rule: "rule family=ipv4 source address={{ item }} port port={{ podman_transmission_firewalld_ports }} protocol=tcp accept"
    permanent: yes
    immediate: yes
    state: enabled
  loop:
    - "{{ grp_device.arch.ipv4_addr }}"
    - "{{ grp_device.one.ipv4_addr }}"
  when: podman_networking.transmission.lan_access

- name: Close transmission firewalld ports to admin devices
  ansible.posix.firewalld:
    zone: "{{ podman_firewalld_zone }}"
    rich_rule: "rule family=ipv4 source address={{ item }} port port={{ podman_transmission_firewalld_ports }} protocol=tcp accept"
    permanent: yes
    immediate: yes
    state: disabled
  loop:
    - "{{ grp_device.arch.ipv4_addr }}"
    - "{{ grp_device.one.ipv4_addr }}"
  when: not podman_networking.transmission.lan_access