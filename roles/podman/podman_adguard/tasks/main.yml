---
- name: Create adguard volume directory
  ansible.builtin.file:
    path: "{{ item }}"
    owner: emanon
    group: emanon
    mode: u=rwx,g=,o=
    state: directory
  loop: "{{ podman_adguard_directories }}"
  become_user: "{{ primary_user_username }}"

- name: Run adguard podman container
  containers.podman.podman_container:
    name: adguard_ansible
    image: "{{ podman_adguard_image }}:{{ podman_adguard_image_version }}"
    publish: "{{ podman_adguard_ports }}"
    volume: "{{ podman_adguard_volumes }}"
    restart_policy: unless-stopped
    state: started
    label: "io.containers.autoupdate=image"
    generate_systemd:
      container_prefix: podman
      path: /home/{{ primary_user_username }}/.config/systemd/user/
  become_user: "{{ primary_user_username }}"
  notify: Enable adguard_ansible podman service

- name: Open adguard dns firewalld ports
  ansible.posix.firewalld:
    zone: "{{ firewalld_zone }}"
    port: "{{ item }}"
    permanent: yes
    immediate: yes
    state: enabled
  loop:
    - "{{ podman_adguard_firewalld_ports.dns_udp }}"
    - "{{ podman_adguard_firewalld_ports.dns_tcp }}"

- name: Open adguard webui firewalld ports
  ansible.posix.firewalld:
    zone: "{{ firewalld_zone }}"
    port: "{{ podman_adguard_firewalld_ports.webui }}"
    permanent: yes
    immediate: yes
    state: enabled
  when: grp_podman_networking.adguard.lan_access

- name: Close adguard webui firewalld ports
  ansible.posix.firewalld:
    zone: "{{ firewalld_zone }}"
    port: "{{ podman_adguard_firewalld_ports.webui }}"
    permanent: yes
    immediate: yes
    state: disabled
  when: not grp_podman_networking.adguard.lan_access