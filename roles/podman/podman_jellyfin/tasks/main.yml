---
- name: Create jellyfin volumes dir
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: emanon
    group: emanon
    mode: u=rwx,g=,o=
  loop: "{{ podman_jellyfin_directories }}"

- name: Run jellyfin podman container
  containers.podman.podman_container:
    name: jellyfin_ansible
    image: "{{ podman_jellyfin_image }}:{{ podman_jellyfin_image_version }}"
    publish: "{{ podman_jellyfin_ports }}"
    volume: "{{ podman_jellyfin_volumes }}"
    restart_policy: unless-stopped
    state: started
    label: "io.containers.autoupdate=image"
  become_user: "{{ primary_user_username }}"

- name: Open jellyfin firewalld ports to admin devices
  ansible.posix.firewalld:
    zone: "{{ podman_jellyfin_firewalld_zone }}"
    rich_rule: "rule family={{ item.family }} source address={{ item.source }} port port={{ item.port }} protocol={{ item.proto }} accept"
    permanent: yes
    immediate: yes
    state: enabled
  loop: "{{ podman_jellyfin_firewalld_rich_rules }}"
  when: podman_networking.jellyfin.lan_access

- name: Close jellyfin firewalld ports to admin devices
  ansible.posix.firewalld:
    zone: "{{ podman_jellyfin_firewalld_zone }}"
    rich_rule: "rule family={{ item.family }} source address={{ item.source }} port port={{ item.port }} protocol={{ item.proto }} accept"
    permanent: yes
    immediate: yes
    state: disabled
  loop: "{{ podman_jellyfin_firewalld_rich_rules }}"
  when: not podman_networking.jellyfin.lan_access