---
- name: Create grafana volume directories
  ansible.builtin.file:
    path: "{{ item }}"
    owner: emanon
    group: emanon
    mode: u=rwx,g=,o=
    state: directory
  loop: "{{ podman_grafana_directories }}"
  become_user: "{{ primary_user_username }}"

- name: Place grafana dashboards
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ host_podman_volumes_path }}/grafana/dashboards"
    owner: emanon
    group: emanon
    mode: u=rw,g=,o=
  loop: "{{ podman_grafana_dashboards }}"
  become_user: "{{ primary_user_username }}"

- name: Run grafana podman container
  containers.podman.podman_container:
    name: grafana_ansible
    image: "{{ podman_grafana_image }}:{{ podman_grafana_image_version }}"
    volumes: "{{ podman_grafana_volumes }}"
    publish: "{{ podman_grafana_ports }}"
    restart_policy: unless-stopped
    state: started
    user: "root"
    env:
      GF_SECURITY_ADMIN_PASSWORD: "{{ podman_grafana_admin_password }}"
  become_user: "{{ primary_user_username }}"
  register: podman_grafana_res

- name: Open grafana webui firewalld ports
  ansible.posix.firewalld:
    zone: "{{ firewalld_zone }}"
    port: "{{ podman_grafana_firewalld_ports }}"
    permanent: yes
    immediate: yes
    state: enabled
  when: grp_podman_networking.grafana.lan_access

- name: Close grafana webui firewalld ports
  ansible.posix.firewalld:
    zone: "{{ firewalld_zone }}"
    port: "{{ podman_grafana_firewalld_ports }}"
    permanent: yes
    immediate: yes
    state: disabled
  when: not grp_podman_networking.grafana.lan_access

- name: Pause, waiting for grafana # noqa 503
  ansible.builtin.pause:
    prompt: Pause the playbook, waiting for grafana to be fully up
    seconds: 20
  when: podman_grafana_res.changed

- name: Create prometheus datasource
  community.grafana.grafana_datasource:
    name: prometheus
    grafana_url: "{{ podman_grafana_url }}"
    url_username: "admin"
    url_password: "{{ podman_grafana_admin_password }}"
    ds_type: prometheus
    ds_url: "http://{{ grp_podman_networking.prometheus.fulldomain }}"
    is_default: yes

- name: Create grafana network folder
  community.grafana.grafana_folder:
    grafana_url: "{{ podman_grafana_url }}"
    url_username: "admin"
    url_password: "{{ podman_grafana_admin_password }}"
    title: Network
    state: present

- name: Create grafana env folder
  community.grafana.grafana_folder:
    grafana_url: "{{ podman_grafana_url }}"
    url_username: "admin"
    url_password: "{{ podman_grafana_admin_password }}"
    title: Env
    state: present

- name: Import grafana network dashboards
  community.grafana.grafana_dashboard:
    grafana_url: "{{ podman_grafana_url }}"
    url_username: "admin"
    url_password: "{{ podman_grafana_admin_password }}"
    path: "{{ item }}"
    folder: Network
    overwrite: yes
  loop: "{{ podman_grafana_dashboards_path.network }}"
  become_user: "{{ primary_user_username }}"

- name: Import grafana env dashboards
  community.grafana.grafana_dashboard:
    grafana_url: "{{ podman_grafana_url }}"
    url_username: "admin"
    url_password: "{{ podman_grafana_admin_password }}"
    path: "{{ item }}"
    folder: Env
    overwrite: yes
  loop: "{{ podman_grafana_dashboards_path.env }}"
  become_user: "{{ primary_user_username }}"

- name: Import grafana general dashboards
  community.grafana.grafana_dashboard:
    grafana_url: "{{ podman_grafana_url }}"
    url_username: "admin"
    url_password: "{{ podman_grafana_admin_password }}"
    path: "{{ item }}"
    folder: General
    overwrite: yes
  loop: "{{ podman_grafana_dashboards_path.general }}"
  become_user: "{{ primary_user_username }}"