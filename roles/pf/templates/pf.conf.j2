ext_if="igb0"
int_if="igb1"
wg_if="wg0"

tcp_services = "{ http, https }"
udp_services = "{ https }"


### options ###
set block-policy drop
set loginterface $ext_if
set loginterface $int_if
set skip on lo0
set skip on $wg_if

### scrub ###
scrub in all

### nat src ###
nat on $ext_if from $int_if:network to any -> ($ext_if)

pass in quick proto tcp from any to any port ssh
### nat dest ###

### icmp ###
# Neighbor Discovery Protocol (NDP) (types 133-137):
#   Router Solicitation (RS), Router Advertisement (RA)
#   Neighbor Solicitation (NS), Neighbor Advertisement (NA)
#   Route Redirection


### filters ###
### inbound int_if ###
pass in log quick on $int_if
pass in quick on $int_if inet proto icmp
pass in quick on $int_if inet6 proto ipv6-icmp
pass in quick on $int_if proto { tcp udp } from $int_if:network to self port domain
pass in quick on $int_if proto tcp from $int_if:network to self port ssh
pass in quick on $int_if proto udp from { $int_if:network } to self port { domain ntp bootpc dhcpv6-server }

### inbound ext_if ###
## antispoof for $ext_if
icmp6_types="{ 2, 128 }" # packet too big, echo request (ping6)
icmp6_types_ext_if="{ 128, 133, 134, 135, 136, 137 }"
pass in quick on $ext_if inet6 proto ipv6-icmp icmp6-type $icmp6_types keep state
pass in quick on $ext_if inet6 proto ipv6-icmp from any to { ( $ext_if ), ff02::1/16 } icmp6-type $icmp6_types_ext_if keep state

icmp_types = "{ 0, 3, 4, 8, 11, 12 }"
pass in quick on $ext_if inet proto icmp all icmp-type $icmp_types
pass in quick on $ext_if proto tcp from any to any port ssh
pass in quick on $ext_if proto udp from any to any port 51820

### outbound int_if ###
pass out on $int_if
### outbound ext_if ###
pass out on $ext_if

block in log from any to any
