---
- name: Create promtail user
  ansible.builtin.user:
    name: promtail
    groups: ["systemd-journal", "adm"]
    create_home: no
    shell: /usr/bin/bash
    comment: Promtail user created by Ansible
    state: present

- name: Create promtail folder
  ansible.builtin.file:
    path: "{{ promtail_path }}"
    owner: promtail
    group: promtail
    mode: u=rwx,g=,o=
    state: directory

- name: Create promtail versions folder
  ansible.builtin.file:
    path: "{{ promtail_path }}/promtail-linux-{{ promtail_cpu_architecture }}-{{ promtail_version }}"
    owner: promtail
    group: promtail
    mode: u=rwx,g=,o=
    state: directory

- name: Check if promtail Binary already exist
  ansible.builtin.stat:
    path: "{{ promtail_path }}/promtail-linux-{{ promtail_cpu_architecture }}-{{ promtail_version }}/promtail-linux-{{ promtail_cpu_architecture }}"
  register: stat_value

- name: Download promtail zip archive
  ansible.builtin.get_url:
    url: "https://github.com/grafana/loki/releases/download/v{{ promtail_version }}/promtail-linux-{{ promtail_cpu_architecture }}.zip" # noqa 204
    dest: "{{ promtail_path }}/promtail-linux-{{ promtail_cpu_architecture }}-{{ promtail_version }}.zip"
    checksum: "sha256:https://github.com/grafana/loki/releases/download/v{{ promtail_version }}/SHA256SUMS"
    owner: promtail
    group: promtail
    mode: u=rx,g=,o=
    timeout: 30
  when: not stat_value.stat.exists

- name: Extract promtail archive
  ansible.builtin.unarchive:
    src: "{{ promtail_path }}/promtail-linux-{{ promtail_cpu_architecture }}-{{ promtail_version }}.zip"
    dest: "{{ promtail_path }}/promtail-linux-{{ promtail_cpu_architecture }}-{{ promtail_version }}"
    owner: promtail
    group: promtail
    remote_src: yes
  when: not stat_value.stat.exists

- name: Delete promtail zip archive
  ansible.builtin.file:
    path: "{{ promtail_path }}/promtail-linux-{{ promtail_cpu_architecture }}-{{ promtail_version }}.zip"
    state: absent
  when: not stat_value.stat.exists

- name: Configure promtail service file
  ansible.builtin.template:
    src: promtail.service.j2
    dest: /etc/systemd/system/promtail.service
    owner: root
    group: root
    mode: u=rw,g=,o=
  notify:
    - Daemon-reload promtail systemd
    - Enable promtail service
    - Start promtail service
    - Restart promtail service

- name: Configure promtail config file
  ansible.builtin.template:
    src: promtail.yml.j2
    dest: "{{ promtail_path }}/promtail.yml"
    owner: promtail
    group: promtail
    mode: u=rw,g=,o=
  notify: Restart promtail service