---
- name: Remove standards backports
  ansible.builtin.apt_repository:
    repo: deb http://deb.debian.org/debian {{ ansible_distribution_release  }}-backports main
    state: absent

- name: Add backports contrib for repository OpenZFS
  ansible.builtin.apt_repository:
    repo: deb http://deb.debian.org/debian {{ ansible_distribution_release  }}-backports main contrib
    filename: "{{ ansible_distribution_release  }}-backports"
    state: present

- name: Install ZFS packages
  ansible.builtin.apt:
    name: [dpkg-dev, linux-headers-amd64, zfs-dkms, zfsutils-linux]
    update_cache: yes
    state: present

- name: Configure ZFS dkms kernel module
  ansible.builtin.template:
    src: zfs.conf.j2
    dest: /etc/modprobe.d/zfs.conf
    owner: root
    group: root
    mode: u=rw,g=,o=


- name: Configure automatic zpool scrubing
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: /etc/systemd/system/{{ item }}
    owner: root
    group: root
    mode: u=rw,g=,o=
  loop: [zpool-scrub@.service, zpool-scrub@.timer]
  notify: Enable zpool(s) scrub timer(s)


###### Testing community.general.zfs ######
# - name: Create file-disk
#   ansible.builtin.command:
#     cmd: truncate -s 4G /root/1.img /root/2.img

# - name: Create file-disk
#   ansible.builtin.command:
#     cmd: zpool create vault mirror /root/1.img /root/2.img -o failmode=continue

# - name: Copy encryption key
#   ansible.builtin.copy:
#     src: encryption_key
#     dest: /root/key
#     owner: root
#     group: root
#     mode: u=r,g=,o=
#     force: yes

# - name: Create Vault datasets
#   community.general.zfs:
#     name: vault/encrypted
#     state: present
#     extra_zfs_properties:
#       compression: zstd
#       encryption: aes-256-gcm
#       keyformat: hex
#       keylocation: file:///root/key
