---
- name: Daemon-reload zfs systemd
  ansible.builtin.systemd:
    daemon_reload: true

- name: Enable zpool(s)-scrub timer(s)
  ansible.builtin.systemd:
    name: "zpool-scrub@{{ item.pool }}.timer"
    enabled: true
  loop: "{{ zfs_pools }}"
  loop_control:
    label: "ZFS pool Name: {{ item.pool }}"

- name: Start zpool(s)-scrub timer(s)
  ansible.builtin.systemd:
    name: "zpool-scrub@{{ item.pool }}.timer"
    state: started
  loop: "{{ zfs_pools }}"
  loop_control:
    label: "ZFS pool Name: {{ item.pool }}"

- name: Restart zpool(s)-scrub timer(s)
  ansible.builtin.systemd:
    name: "zpool-scrub@{{ item.pool }}.timer"
    state: restarted
  loop: "{{ zfs_pools }}"
  loop_control:
    label: "ZFS pool Name: {{ item.pool }}"

- name: Enable zpool(s)-trim timer(s)
  ansible.builtin.systemd:
    name: "zpool-trim@{{ item.pool }}.timer"
    enabled: true
  when: item.enable_trim
  loop: "{{ zfs_pools }}"
  loop_control:
    label: "ZFS pool Name: {{ item.pool }}"

- name: Start zpool(s)-trim timer(s)
  ansible.builtin.systemd:
    name: "zpool-trim@{{ item.pool }}.timer"
    state: started
  when: item.enable_trim
  loop: "{{ zfs_pools }}"
  loop_control:
    label: "ZFS pool Name: {{ item.pool }}"

- name: Restart zpool(s)-trim timer(s)
  ansible.builtin.systemd:
    name: "zpool-trim@{{ item.pool }}.timer"
    state: restarted
  when: item.enable_trim
  loop: "{{ zfs_pools }}"
  loop_control:
    label: "ZFS pool Name: {{ item.pool }}"

- name: Enable zfs-load-keys service
  ansible.builtin.systemd:
    name: "zfs-load-keys.service"
    enabled: true

- name: Enable zfs-mount-encrypted-datasets service
  ansible.builtin.systemd:
    name: "zfs-mount-encrypted-datasets.service"
    enabled: true
