---
- name: Install nfs client
  ansible.builtin.apt:
    name: nfs-common
    state: present

- name: Create mount directories
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "{{ primary_user_username }}"
    group: "{{ primary_user_username }}"
    mode: u=rwx,g=,o=
    state: directory
  loop: "{{ nfs4_directories }}"

- name: Create nfs mount point
  ansible.builtin.file:
    path: "{{ item.target_mountpoint }}"
    owner: "{{ primary_user_username }}"
    group: "{{ primary_user_username }}"
    mode: u=rwx,g=,o=
    state: directory
  when: not item.skip_creation
  loop: "{{ nfs4_mounts }}"
  loop_control:
    label: "NFSv4 Mountpoint: {{ item.target_mountpoint }}"

- name: Configure NFSv4 environnement file(s)
  ansible.builtin.template:
    src: nfsv4.env.j2
    dest: /etc/systemd/system/nfsv4_{{ item.mount }}.env
    owner: root
    group: root
    mode: u=rw,g=r,o=
  loop: "{{ nfs4_mounts }}"
  loop_control:
    label: "NFSv4 Env file name: nfsv4_{{ item.mount }}.env"
  notify:
    - Daemon-reload nfsv4_client systemd
    - Enable nfsv4_mount service(s)

- name: Configure NFSv4 share(s)
  ansible.builtin.template:
    src: nfsv4_mount@.service.j2
    dest: /etc/systemd/system/nfsv4_mount@.service
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  notify:
    - Daemon-reload nfsv4_client systemd
    - Enable nfsv4_mount service(s)

- name: Get current nfs4 mounts
  ansible.builtin.command:
    cmd: mount -l -t nfs4
  register: current_mounts
  changed_when: no

- name: Start nfsv4_mount service(s) when needed
  ansible.builtin.systemd:
    name: nfsv4_mount@{{ item.mount }}.service
    state: started
  when: "item.target_addr + ':' + item.target_path + ' on ' + item.target_mountpoint not in current_mounts.stdout"
  loop: "{{ nfs4_mounts }}"
  loop_control:
    label: "NFSv4 Mount name: {{ item.mount }}"