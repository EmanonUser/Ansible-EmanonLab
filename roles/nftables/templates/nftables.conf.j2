#!/usr/sbin/nft -f

flush ruleset

define WAN = {{ grp_device.router.wan_interface }}
define LAN = {{ lacp_interface_name }}
define WG = {{ wireguard_interface_name }}

table inet routing {
	chain prerouting {
		type nat hook prerouting priority dstnat; policy accept
		iifname $WAN tcp dport 22000 dnat ip to {{ grp_device.nas.ipv4_addr }}:22000 # Syncthing TCP P2P DNAT
		iifname $WAN udp dport 22000 dnat ip to {{ grp_device.nas.ipv4_addr }}:22000 # Syncthing UDP P2P DNAT
		iifname $WAN udp dport 21027 dnat ip to {{ grp_device.nas.ipv4_addr }}:21027 # Syncthing UDP Discovery
		iifname $WAN tcp dport 8000 dnat ip to {{ grp_device.arch.ipv4_addr }}:8000 # Temporary web server DNAT
		iifname $LAN ip saddr 192.168.0.0/16 udp dport 51820 meta nftrace set 1 dnat ip to 192.168.1.2:51820
	}

	chain postrouting {
		type nat hook postrouting priority srcnat; policy accept
		oifname $WAN masquerade # WAN NAT
	}
}

table inet firewall {
	set IANA_BOGON_IPV4 {
		type ipv4_addr
		counter
		flags interval
		elements = { 0.0.0.0/8, 10.0.0.0/8, 100.64.0.0/10, 127.0.0.0/8, 169.254.0.0/16, 172.16.0.0/12, 192.0.0.0/24,
		192.0.2.0/24, 192.168.0.0/16, 198.18.0.0/15, 198.51.100.0/24, 203.0.113.0/24, 240.0.0.0/4 }
	}
	set IANA_BOGON_IPV6 {
		type ipv6_addr
		counter
		flags interval
		elements = { ::/128, ::1/128, ::ffff:0:0/96, 64:ff9b:1::/48, 100::/64, 2001::/23, 2001:db8::/32, fc00::/7, fe80::/10 }
	}

	chain wan_input {
		jump wan_input_log
		jump wan_input_filter
		tcp dport ssh ct state new log level notice prefix "New SSH connexion from WAN: " counter accept
		udp dport {{ wireguard_server_port }} ct state new log level notice prefix "New Wireguard connexion from WAN: " counter accept
	}

	chain wan_input_log {
		icmp type echo-request icmp sequence {{ is_alive_echo_request_count }} log level notice prefix "isAlive Ping: " counter accept
		icmpv6 type echo-request icmpv6 sequence {{ is_alive_echo_request_count }} log level notice prefix "isAlive Ping: " counter accept
	}

	chain wan_input_filter {
		tcp dport ssh ct state new limit rate over 100/second counter drop
		icmp type { echo-request, timestamp-request, destination-unreachable } limit rate over 10/second counter drop
		icmp type { echo-request, timestamp-request, destination-unreachable } counter accept
		icmp type { time-exceeded, parameter-problem } limit rate over 10/second counter drop
		icmp type { time-exceeded, parameter-problem } counter accept
		icmpv6 type { echo-request, destination-unreachable, packet-too-big, time-exceeded } limit rate over 10/second counter drop
		icmpv6 type { echo-request, destination-unreachable, packet-too-big, time-exceeded } counter accept
		icmpv6 type { nd-router-solicit, nd-router-advert, nd-neighbor-solicit, nd-neighbor-advert } limit rate over 10/second counter drop
		icmpv6 type { nd-router-solicit, nd-router-advert, nd-neighbor-solicit, nd-neighbor-advert } counter accept
		icmpv6 type { mld-listener-query, mld-listener-report, mld-listener-reduction } limit rate over 10/second counter drop
		icmpv6 type { mld-listener-query, mld-listener-report, mld-listener-reduction } counter accept
		tcp flags ne syn ct state new log level notice prefix "TCP flags not a SYN " counter drop
		tcp flags & (syn|fin) eq (syn|fin) log level notice prefix "TCP flags SYN + FIN " counter drop
		tcp flags & (syn|rst) eq (syn|rst) log level notice prefix "TCP flags SYN + RST " counter drop
		tcp flags & (fin|syn|rst|psh|ack|urg) lt (fin) log level notice prefix "NO TCP flags NULL " counter drop
		tcp flags & (fin|syn|rst|psh|ack|urg) eq (fin|psh|urg) log prefix "TCP flags FIN + PSH + URG " counter drop
		ip saddr 192.168.1.1 udp dport 51820 counter accept # Wireguard from LAN, this is the result of double nat
		ip saddr 192.168.1.1 tcp dport 22 counter accept # SSH from LAN, this is the result of double nat
		ct state invalid counter drop
		ip saddr @IANA_BOGON_IPV4 counter drop  # Reject special-purpose ipv4 addresses
		ip6 saddr @IANA_BOGON_IPV6 counter drop # Reject special-purpose ipv6 addresses
	}

	chain lan_input {
		tcp dport { ssh, 9100 } ct state new counter accept
		udp dport { domain, bootps, ntp, dhcpv6-server, wireguard } ct state new counter accept
		icmp type { echo-request, timestamp-request, destination-unreachable } ct state new counter accept
		icmp type { time-exceeded, parameter-problem } counter accept
		icmpv6 type { echo-request, destination-unreachable, packet-too-big, time-exceeded } counter accept
		icmpv6 type { nd-router-solicit, nd-router-advert, nd-neighbor-solicit, nd-neighbor-advert } counter accept
		icmpv6 type { mld-listener-query, mld-listener-report, mld-listener-reduction } counter accept
		ip protocol ospf ct state new counter accept
		ct state invalid counter drop
	}

	chain wan_forward {
		oifname $LAN ip daddr {{ grp_device.pi.ipv4_addr }} tcp dport 22000 counter accept # Syncthing Port Forwarding
		oifname $LAN ip daddr {{ grp_device.pi.ipv4_addr }} udp dport 22000 counter accept # Syncthing Port Forwarding
		oifname $LAN ip daddr {{ grp_device.arch.ipv4_addr }} tcp dport 8000 counter accept # Temporary web server Port Forwading
		oifname $LAN ip6 daddr {{ grp_device.pi.ipv6_addr }} tcp dport 22000 counter accept # Syncthing Port Forwarding
		oifname $LAN ip6 daddr {{ grp_device.pi.ipv6_addr }} udp dport 22000 counter accept # Syncthing Port Forwarding
		oifname $LAN ip6 daddr {{ grp_device.arch.ipv6_addr }} tcp dport 8000 counter accept # Temporary web server Port Forwading
		jump forward_filter
	}

	chain lan_forward {
		ip saddr {{ grp_device.arch.ipv4_addr }} ip daddr 192.168.1.1 counter accept # Accept from admin to FAI modem
		oifname $WAN ct state new counter accept # WAN traffic forwading
		jump forward_filter
	}

	chain forward_filter {
		ct state invalid counter drop
		oifname $WAN ip daddr @IANA_BOGON_IPV4 counter drop # Reject special-purpose ipv4 addresses to WAN from LAN
		oifname $WAN ip6 daddr @IANA_BOGON_IPV6 counter drop # Reject special-purpose ipv6 addresses to WAN from LAN
	}

	chain output_filter {
		ct state invalid counter drop
		oifname $WAN ip daddr @IANA_BOGON_IPV4 counter reject with icmpx type admin-prohibited  # Reject special-purpose ipv4 addresses to WAN from local
		oifname $WAN ip6 daddr @IANA_BOGON_IPV6 counter reject with icmpx type admin-prohibited # Reject special-purpose ipv6 addresses to WAN from local
	}

	chain input {
		type filter hook input priority filter; policy drop;
		iifname vmap { $WAN : jump wan_input, $LAN : jump lan_input, $WG : accept, lo : accept }
		ct state { established, related } counter accept
	}

	chain forward {
		type filter hook forward priority filter; policy drop;
		iifname vmap { $WAN : jump wan_forward, $LAN : jump lan_forward, $WG : accept }
		ct state { established, related } counter accept
	}

	chain output {
		type filter hook output priority filter; policy drop;
		icmpv6 type { 1-4, 128-136 } counter accept       # Accept icmpv6 before ct state invalid, multicast is tagged as invalid
		oifname $WAN ip daddr 192.168.1.1 counter accept    # Don't Block SSH from ndd
		jump output_filter
		ct state { established, related, new } counter accept
	}
}

table ip sshguard {
	set attackers {
		type ipv4_addr
		flags interval
	}

	chain blacklist {
		type filter hook input priority filter - 10; policy accept;
		ip saddr @attackers drop
	}
}
table ip6 sshguard {
	set attackers {
		type ipv6_addr
		flags interval
	}

	chain blacklist {
		type filter hook input priority filter - 10; policy accept;
		ip6 saddr @attackers drop
	}
}